version: '3.8'

services:
  postgres:
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=transporte
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./apps/backend/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-init:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    environment:
      - DB_USER=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_PASSWORD=postgres
      - DB_NAME=transporte
      - NODE_ENV=production
    volumes:
      - ./apps/backend/src:/app/src
      - ./apps/backend/package.json:/app/package.json
      - ./apps/backend/package-lock.json:/app/package-lock.json
      - ./apps/backend/tsconfig.json:/app/tsconfig.json
      - ./apps/backend/tsconfig.build.json:/app/tsconfig.build.json
      - ./apps/backend/nest-cli.json:/app/nest-cli.json
      # Montar la carpeta datos-csv donde est√°n los archivos CSV
      - ./apps/backend/datos-csv:/app/datos-csv
    depends_on:
      postgres:
        condition: service_healthy
    command: ["sh", "-c", "sleep 45 && npx ts-node src/scripts/import-csv.ts --recreate-tables=false"]
    restart: "no"

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - postgres

volumes:
  postgres_data: 